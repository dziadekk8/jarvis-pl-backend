{
  "openapi": "3.1.0",
  "info": {
    "title": "Jarvis-PL Backend API",
    "version": "1.0.0",
    "description": "OpenAPI 3.1 dla backendu Jarvis-PL (Express). Generowane z kodu źródłowego app.js.",
    "license": {
      "name": "Proprietary",
      "identifier": "LicenseRef-Proprietary"
    }
  },
  "servers": [
    {
      "url": "https://ai.aneuroasystent.pl",
      "description": "production"
    },
    {
      "url": "http://localhost:8080",
      "description": "local"
    }
  ],
  "tags": [
    {
      "name": "System",
      "description": "System health and info endpoints"
    },
    {
      "name": "Auth",
      "description": "OAuth2 authentication and authorization"
    },
    {
      "name": "Gmail",
      "description": "Gmail integration endpoints"
    },
    {
      "name": "Drive",
      "description": "Google Drive integration"
    },
    {
      "name": "Calendar",
      "description": "Google Calendar integration"
    },
    {
      "name": "Places",
      "description": "Google Places API integration"
    },
    {
      "name": "Agent",
      "description": "Agent command processing"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "System"
        ],
        "operationId": "getRoot",
        "summary": "Get root info",
        "description": "Returns basic information about the API",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RootInfo"
                },
                "example": {
                  "ok": true,
                  "name": "jarvis-pl-backend",
                  "time": 1699123456789,
                  "env": "production"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "System"
        ],
        "operationId": "getHealth",
        "summary": "Health check",
        "description": "Returns health status with no-cache headers",
        "responses": {
          "200": {
            "description": "Healthy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                },
                "example": {
                  "ok": true,
                  "now": 1699123456789
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Health check failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/diag/env": {
      "get": {
        "tags": [
          "System"
        ],
        "operationId": "getDiagnostics",
        "summary": "Environment diagnostics",
        "description": "Returns environment configuration for debugging",
        "responses": {
          "200": {
            "description": "Environment info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiagnosticsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Diagnostics failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/url": {
      "get": {
        "tags": [
          "Auth"
        ],
        "operationId": "getAuthUrl",
        "summary": "Get OAuth2 authorization URL",
        "description": "Returns Google OAuth2 authorization URL for starting authentication flow",
        "responses": {
          "200": {
            "description": "Authorization URL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthUrlResponse"
                },
                "example": {
                  "url": "https://accounts.google.com/o/oauth2/v2/auth?client_id=..."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/status": {
      "get": {
        "tags": [
          "Auth"
        ],
        "operationId": "getAuthStatus",
        "summary": "Get authentication status",
        "description": "Returns current OAuth2 token status",
        "responses": {
          "200": {
            "description": "Authentication status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthStatusResponse"
                },
                "example": {
                  "authenticated": true,
                  "hasAccessToken": true,
                  "hasRefreshToken": true,
                  "expiry": 1699127056789
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/export": {
      "get": {
        "tags": [
          "Auth"
        ],
        "operationId": "exportTokens",
        "summary": "Export OAuth2 tokens",
        "description": "Returns current OAuth2 tokens (DEV only or ALLOW_AUTH_EXPORT=1)",
        "security": [
          {
            "adminToken": []
          },
          {
            "oauth2": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Exported tokens",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenExportResponse"
                }
              }
            }
          },
          "400": {
            "description": "No tokens available",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/drive/search": {
      "get": {
        "tags": [
          "Drive"
        ],
        "operationId": "searchDriveFiles",
        "summary": "Search Google Drive files",
        "description": "Search for files in Google Drive with optional filters",
        "security": [
          {
            "adminToken": []
          },
          {
            "oauth2": [
              "https://www.googleapis.com/auth/drive.readonly"
            ]
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search query for file names"
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            },
            "description": "Number of files to return"
          },
          {
            "name": "namePrefix",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by name prefix (case insensitive)"
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "pdf",
                "doc",
                "docx",
                "document",
                "sheet",
                "xlsx",
                "spreadsheet",
                "slides",
                "ppt",
                "pptx",
                "folder",
                "image",
                "video",
                "csv",
                "txt",
                "zip"
              ]
            },
            "description": "Filter by file type"
          }
        ],
        "responses": {
          "200": {
            "description": "Drive files search results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DriveSearchResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Drive search failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/places/search": {
      "get": {
        "tags": [
          "Places"
        ],
        "operationId": "searchPlaces",
        "summary": "Search Google Places",
        "description": "Search for places using Google Places API",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "kawiarnia"
            },
            "description": "Search query for places"
          },
          {
            "name": "lat",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "default": 52.2297
            },
            "description": "Latitude for location bias"
          },
          {
            "name": "lng",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "default": 21.0122
            },
            "description": "Longitude for location bias"
          },
          {
            "name": "radius",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 3000
            },
            "description": "Search radius in meters"
          }
        ],
        "responses": {
          "200": {
            "description": "Places search results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlacesSearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Places search failed or missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/places/details": {
      "get": {
        "tags": [
          "Places"
        ],
        "operationId": "getPlaceDetails",
        "summary": "Get place details",
        "description": "Get detailed information about a specific place",
        "parameters": [
          {
            "name": "place_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Google Places place ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Place details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing place_id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Places details failed or missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/agent/command": {
      "post": {
        "tags": [
          "Agent"
        ],
        "operationId": "executeAgentCommand",
        "summary": "Execute agent command",
        "description": "Process natural language commands for Gmail and Drive operations",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentCommandRequest"
              },
              "example": {
                "text": "oznacz mail 18b2f4a7c8d9e10f jako przeczytany"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentCommandResponse"
                }
              }
            }
          },
          "400": {
            "description": "Unrecognized command or missing text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Agent command failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/calendar/create": {
      "post": {
        "tags": [
          "Calendar"
        ],
        "operationId": "createCalendarEvent",
        "summary": "Create calendar event",
        "description": "Create a new Google Calendar event with optional Google Meet integration",
        "security": [
          {
            "adminToken": []
          },
          {
            "oauth2": [
              "https://www.googleapis.com/auth/calendar"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarCreateRequest"
              },
              "example": {
                "summary": "Team Meeting",
                "description": "Weekly team sync",
                "location": "Conference Room A",
                "startISO": "2023-11-04T14:00:00.000Z",
                "endISO": "2023-11-04T15:00:00.000Z",
                "attendees": [
                  "colleague@example.com"
                ],
                "conference": "true",
                "tz": "Europe/Warsaw",
                "start": "2023-11-04T14:00:00.000Z",
                "end": "2023-11-04T15:00:00.000Z"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Event created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarCreateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Calendar create failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/calendar/list": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "operationId": "listCalendarEvents",
        "summary": "List calendar events",
        "description": "Get calendar events within a time range",
        "security": [
          {
            "adminToken": []
          },
          {
            "oauth2": [
              "https://www.googleapis.com/auth/calendar"
            ]
          }
        ],
        "parameters": [
          {
            "name": "calendarId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "primary"
            },
            "description": "Calendar ID"
          },
          {
            "name": "timeMin",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Start time (ISO 8601)"
          },
          {
            "name": "timeMax",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "End time (ISO 8601)"
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2500,
              "default": 250
            },
            "description": "Maximum number of events"
          },
          {
            "name": "singleEvents",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "description": "Expand recurring events"
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "startTime",
                "updated"
              ]
            },
            "description": "Sort order"
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar events",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Calendar list failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/calendar/notifications": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "operationId": "getCalendarNotifications",
        "summary": "Calendar notifications endpoint (GET)",
        "description": "Handle calendar webhook notifications (GET for testing)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Calendar"
        ],
        "operationId": "handleCalendarNotifications",
        "summary": "Calendar notifications webhook",
        "description": "Handle Google Calendar push notifications",
        "parameters": [
          {
            "name": "x-goog-channel-id",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "Google channel ID"
          },
          {
            "name": "x-goog-resource-id",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "Google resource ID"
          },
          {
            "name": "x-goog-resource-state",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "Google resource state"
          },
          {
            "name": "x-goog-message-number",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "Google message number"
          },
          {
            "name": "x-goog-channel-token",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "Google channel token"
          }
        ],
        "responses": {
          "200": {
            "description": "Notification processed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarNotificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "options": {
        "tags": [
          "Calendar"
        ],
        "operationId": "optionsCalendarNotifications",
        "summary": "Calendar notifications OPTIONS",
        "description": "Handle OPTIONS for calendar webhook notifications",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarNotificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/calendar/quickAdd": {
      "post": {
        "tags": [
          "Calendar"
        ],
        "operationId": "quickAddCalendarEvent",
        "summary": "Quick add calendar event",
        "description": "Create calendar event from natural language text",
        "security": [
          {
            "adminToken": []
          },
          {
            "oauth2": [
              "https://www.googleapis.com/auth/calendar"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarQuickAddRequest"
              },
              "example": {
                "text": "Meeting with John tomorrow at 2pm"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Event created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarQuickAddResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Quick add failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RootInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ok": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "time": {
            "type": "number"
          },
          "env": {
            "type": "string"
          }
        },
        "required": [
          "ok"
        ]
      },
      "HealthResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          },
          "now": {
            "type": "number"
          }
        },
        "required": [
          "ok"
        ]
      },
      "DiagnosticsResponse": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "env": {
            "type": "object"
          }
        }
      },
      "AuthUrlResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "url"
        ]
      },
      "AuthStatusResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "authenticated": {
            "type": "boolean"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasAccessToken": {
            "type": "boolean"
          },
          "hasRefreshToken": {
            "type": "boolean"
          },
          "expiry": {
            "type": "number"
          }
        },
        "required": [
          "authenticated"
        ]
      },
      "TokenExportResponse": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "tokens": {
            "type": "object"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "error": {
            "type": "string"
          },
          "status": {
            "type": "integer"
          },
          "details": {}
        },
        "required": [
          "error"
        ]
      },
      "DriveSearchResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "mimeType": {
                  "type": "string"
                },
                "webViewLink": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "id",
                "name"
              ]
            }
          },
          "nextPageToken": {
            "type": "string"
          }
        },
        "required": [
          "files"
        ]
      },
      "PlacesSearchResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "place_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "formatted_address": {
                  "type": "string"
                },
                "rating": {
                  "type": "number"
                }
              },
              "required": [
                "place_id",
                "name"
              ]
            }
          }
        },
        "required": [
          "results"
        ]
      },
      "PlaceDetailsResponse": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "result": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "place_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "formatted_address": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            }
          }
        },
        "required": [
          "result"
        ]
      },
      "AgentCommandRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "text": {
            "type": "string",
            "description": "Polecenie w j�zyku naturalnym"
          },
          "context": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "required": [
          "text"
        ]
      },
      "AgentCommandResponse": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "ok": {
            "type": "boolean"
          },
          "actions": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "ok"
        ]
      },
      "CalendarCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "summary": {
            "type": "string"
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "location": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "attendees": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "startISO": {
            "type": "string",
            "format": "date-time",
            "description": "Alias of `start` accepted by backend examples"
          },
          "endISO": {
            "type": "string",
            "format": "date-time",
            "description": "Alias of `end` accepted by backend examples"
          },
          "tz": {
            "type": "string",
            "description": "Timezone, e.g., Europe/Warsaw"
          },
          "conference": {
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "description": "Create conference link (string flag)"
          }
        },
        "required": [
          "summary",
          "start",
          "end"
        ]
      },
      "CalendarCreateResponse": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string"
          },
          "htmlLink": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "id"
        ]
      },
      "CalendarListResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "id": {
                  "type": "string"
                },
                "summary": {
                  "type": "string"
                },
                "start": {
                  "type": "string",
                  "format": "date-time"
                },
                "end": {
                  "type": "string",
                  "format": "date-time"
                },
                "location": {
                  "type": "string"
                },
                "htmlLink": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "id",
                "summary",
                "start",
                "end"
              ]
            }
          },
          "nextPageToken": {
            "type": "string"
          }
        },
        "required": [
          "events"
        ]
      },
      "CalendarNotificationResponse": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "ok": {
            "type": "boolean"
          },
          "channelId": {
            "type": "string"
          },
          "resourceId": {
            "type": "string"
          }
        },
        "required": [
          "ok"
        ]
      },
      "CalendarQuickAddRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "text": {
            "type": "string",
            "description": "Naturalny opis zdarzenia, np. 'Meeting tomorrow 2pm'"
          }
        },
        "required": [
          "text"
        ]
      },
      "CalendarQuickAddResponse": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "eventId": {
            "type": "string"
          },
          "htmlLink": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "eventId"
        ]
      }
    },
    "securitySchemes": {
      "adminToken": {
        "type": "apiKey",
        "in": "header",
        "name": "x-admin-token",
        "description": "Admin token for privileged endpoints."
      },
      "oauth2": {
        "type": "oauth2",
        "description": "Google OAuth2 Authorization Code flow",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://accounts.google.com/o/oauth2/v2/auth",
            "tokenUrl": "https://oauth2.googleapis.com/token",
            "scopes": {
              "https://www.googleapis.com/auth/userinfo.email": "Basic user info",
              "https://www.googleapis.com/auth/gmail.modify": "Gmail modify",
              "https://www.googleapis.com/auth/gmail.send": "Gmail send",
              "https://www.googleapis.com/auth/drive.readonly": "Drive read only",
              "https://www.googleapis.com/auth/calendar": "Calendar access",
              "https://www.googleapis.com/auth/places": "Places access"
            }
          }
        }
      }
    }
  },
  "security": []
}
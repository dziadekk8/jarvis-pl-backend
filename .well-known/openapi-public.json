{
  "openapi": "3.1.0",
  "info": {
    "title": "Jarvis PL Backend API",
    "version": "1.0.0",
    "description": "REST API for Gmail, Google Drive, Google Calendar and Google Places utilities,\nplus OAuth bootstrap and simple agent commands. Responses are JSON unless noted.\nAuthentication is required for most endpoints (see `securitySchemes`).\n",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local development"
    },
    {
      "url": "https://ai.aneuroasystent.pl",
      "description": "Production"
    }
  ],
  "security": [],
  "tags": [
    {
      "name": "Root",
      "description": "Informacje o serwerze i metadane."
    },
    {
      "name": "Health",
      "description": "Szybkie sprawdzenie zdrowia/usług (no-cache)."
    },
    {
      "name": "Diagnostics",
      "description": "Diagnostyka środowiska i konfiguracji."
    },
    {
      "name": "OAuth",
      "description": "Operacje OAuth2 z Google (status/URL)."
    },
    {
      "name": "Gmail",
      "description": "Operacje Gmail: wątki, wiadomości, etykiety, modyfikacje."
    },
    {
      "name": "Drive",
      "description": "Wyszukiwanie i metadane plików Google Drive."
    },
    {
      "name": "Places",
      "description": "Wyszukiwanie miejsc (np. Google Places)."
    },
    {
      "name": "Agent",
      "description": "Endpointy pomocnicze asystenta."
    },
    {
      "name": "Calendar",
      "description": "Operacje Google Calendar: listowanie i tworzenie wydarzeń."
    },
    {
      "name": "Webhooks",
      "description": "Webhooki i powiadomienia push."
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Root info",
        "operationId": "getRoot",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    },
                    "time": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "env": {
                      "type": "string"
                    }
                  },
                  "$ref": "#/components/schemas/RootInfo"
                },
                "examples": {
                  "ok": {
                    "value": {
                      "ok": true,
                      "name": "jarvis-pl-backend",
                      "time": 1757258489666,
                      "env": "production"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error400"
          }
        },
        "tags": [
          "Root"
        ]
      }
    },
    "/health": {
      "get": {
        "summary": "Health check (no-cache)",
        "operationId": "getHealth",
        "responses": {
          "200": {
            "description": "Service healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "now": {
                      "type": "integer",
                      "format": "int64"
                    }
                  },
                  "$ref": "#/components/schemas/HealthOk"
                },
                "examples": {
                  "ok": {
                    "value": {
                      "ok": true,
                      "now": 1757258489594
                    }
                  }
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "Set to no-store",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error400"
          },
          "500": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "Health"
        ]
      }
    },
    "/auth/status": {
      "get": {
        "summary": "Check if server has Google tokens loaded",
        "operationId": "getAuthStatus",
        "responses": {
          "200": {
            "description": "Current auth status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "authenticated": {
                      "type": "boolean"
                    },
                    "hasAccessToken": {
                      "type": "boolean"
                    },
                    "hasRefreshToken": {
                      "type": "boolean"
                    },
                    "expiry": {
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "integer",
                          "format": "int64"
                        }
                      ]
                    }
                  },
                  "$ref": "#/components/schemas/AuthStatus"
                },
                "examples": {
                  "sample": {
                    "value": {
                      "authenticated": true,
                      "hasAccessToken": true,
                      "hasRefreshToken": true,
                      "expiry": 1757261291791
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error400"
          }
        },
        "tags": [
          "OAuth"
        ]
      }
    },
    "/auth/url": {
      "get": {
        "summary": "Get Google OAuth2 authorization URL (JSON)",
        "operationId": "getAuthUrl",
        "responses": {
          "200": {
            "description": "Authorization URL",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "$ref": "#/components/schemas/OAuthUrl"
                },
                "examples": {
                  "redirect": {
                    "value": {
                      "url": "https://accounts.google.com/o/oauth2/v2/auth?client_id=XXX&redirect_uri=https%3A%2F%2Fai.aneuroasystent.pl%2Foauth2%2Fcallback&scope=openid%20profile%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fgmail.modify&response_type=code&access_type=offline&prompt=consent"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error400"
          }
        },
        "tags": [
          "OAuth"
        ]
      }
    },
    "/gmail/labels": {
      "get": {
        "summary": "List Gmail labels",
        "operationId": "gmailLabels",
        "security": [
          {
            "AdminHeader": []
          },
          {
            "BearerAdmin": []
          }
        ],
        "responses": {
          "200": {
            "description": "Labels list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GmailLabel"
                      }
                    },
                    "Count": {
                      "type": "integer"
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/GmailLabelList"
                  },
                  "minimal": {
                    "value": {
                      "value": [
                        {
                          "id": "INBOX",
                          "name": "INBOX",
                          "type": "system"
                        },
                        {
                          "id": "STARRED",
                          "name": "STARRED",
                          "type": "system"
                        },
                        {
                          "id": "Label_123",
                          "name": "Faktury",
                          "type": "user"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error from Gmail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "Gmail"
        ]
      }
    },
    "/gmail/messages": {
      "get": {
        "summary": "List messages (minimal or expanded summaries)",
        "operationId": "gmailMessages",
        "security": [
          {
            "AdminHeader": []
          },
          {
            "BearerAdmin": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "schema": {
              "type": "string"
            },
            "description": "Gmail search query"
          },
          {
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 25
            }
          },
          {
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "raw",
            "schema": {
              "type": "string",
              "enum": [
                "1",
                "true",
                "yes",
                "y",
                "0",
                "false",
                "no",
                "n"
              ]
            }
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "string",
              "enum": [
                "1",
                "true",
                "yes",
                "y",
                "0",
                "false",
                "no",
                "n"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GmailMessageSummary"
                  },
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GmailMessageMinimal"
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GmailMessageSummary"
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "messages": {
                          "type": "array",
                          "items": {}
                        },
                        "nextPageToken": {
                          "type": "string"
                        },
                        "pageSize": {
                          "type": "integer"
                        },
                        "q": {
                          "type": "string"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/GmailMessagesList"
                  },
                  "sample": {
                    "value": [
                      {
                        "id": "19913f5fbd4cb5fc",
                        "threadId": "19913f5fbd4cb5fc",
                        "snippet": "Dziękujemy za wiadomość..."
                      },
                      {
                        "id": "19913f5a7ec7e73a",
                        "threadId": "19913f5a7ec7e73a",
                        "snippet": "Załączam umowę w PDF..."
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error400"
          },
          "500": {
            "description": "List failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "Gmail"
        ]
      }
    },
    "/gmail/threads": {
      "get": {
        "summary": "List threads (minimal)",
        "operationId": "gmailThreads",
        "security": [
          {
            "AdminHeader": []
          },
          {
            "BearerAdmin": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 25
            }
          },
          {
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Threads page",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "threads": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "historyId": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "nextPageToken": {
                      "type": "string"
                    }
                  },
                  "$ref": "#/components/schemas/GmailThreadsList"
                },
                "examples": {
                  "sample": {
                    "value": {
                      "threads": [
                        {
                          "id": "19920979f0112107",
                          "historyId": "123456"
                        },
                        {
                          "id": "19913f5fbd4cb5fc",
                          "historyId": "123457"
                        }
                      ],
                      "nextPageToken": "Cg4IARIAGAY="
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error400"
          },
          "500": {
            "description": "Error listing threads",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "Gmail"
        ]
      }
    },
    "/gmail/thread": {
      "get": {
        "summary": "Get thread meta or expanded content",
        "operationId": "gmailThread",
        "security": [
          {
            "AdminHeader": []
          },
          {
            "BearerAdmin": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "threadId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "string",
              "enum": [
                "1",
                "true",
                "yes",
                "y",
                "0",
                "false",
                "no",
                "n"
              ]
            }
          },
          {
            "in": "query",
            "name": "raw",
            "schema": {
              "type": "string",
              "enum": [
                "1",
                "true",
                "yes",
                "y",
                "0",
                "false",
                "no",
                "n"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Thread details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GmailThread"
                },
                "examples": {
                  "expand_1": {
                    "$ref": "#/components/examples/GmailThreadExpanded"
                  },
                  "raw_1": {
                    "$ref": "#/components/examples/GmailThreadRawResponse"
                  },
                  "expand1": {
                    "value": {
                      "id": "19913f5fbd4cb5fc",
                      "historyId": "123457",
                      "snippet": "Dziękujemy za wiadomość...",
                      "messagesCount": 1,
                      "messages": [
                        {
                          "id": "19913f5fbd4cb5fc",
                          "threadId": "19913f5fbd4cb5fc",
                          "labelIds": [
                            "INBOX"
                          ],
                          "snippet": "Dziękujemy za wiadomość...",
                          "headers": {
                            "from": "Jan Kowalski <jan@example.com>",
                            "to": "Me <me@example.com>",
                            "subject": "Faktura",
                            "date": "Tue, 05 Sep 2025 10:12:34 +0200",
                            "messageId": "<abc123@example.com>"
                          },
                          "body": {
                            "html": "<p>W załączniku faktura.</p>",
                            "text": "W załączniku faktura."
                          },
                          "attachments": [
                            {
                              "filename": "faktura.pdf",
                              "contentType": "application/pdf",
                              "contentBase64": "JVBERi0xLjQKJc..."
                            }
                          ],
                          "inline": [],
                          "hasAttachments": true,
                          "attachmentsCount": 1,
                          "hasInline": false,
                          "inlineCount": 0
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing threadId or Gmail error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "Gmail"
        ],
        "description": "If `expand` is falsy, returns metadata (messages count/snippet).\nIf `expand` is truthy, returns messages with parsed bodies and attachments.\nResponse shape differs depending on feature flag on the server; schema captures the superset (V2).\n"
      }
    },
    "/gmail/modify": {
      "post": {
        "summary": "Add/remove labels for a message (accepts label IDs or names)",
        "operationId": "gmailModify",
        "security": [
          {
            "AdminHeader": []
          },
          {
            "BearerAdmin": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Gmail message ID"
                  },
                  "addLabels": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "removeLabels": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "id"
                ],
                "$ref": "#/components/schemas/GmailModifyRequest"
              },
              "examples": {
                "sample": {
                  "$ref": "#/components/examples/GmailModifyRequest"
                },
                "star_as_unread": {
                  "summary": "Oznacz jako nieprzeczytane i dodaj gwiazdkę",
                  "value": {
                    "id": "19913f5fbd4cb5fc",
                    "addLabels": [
                      "STARRED",
                      "UNREAD"
                    ],
                    "removeLabels": []
                  }
                },
                "star": {
                  "value": {
                    "id": "1892a1b...",
                    "addLabels": [
                      "STARRED"
                    ]
                  }
                },
                "unstar": {
                  "value": {
                    "id": "1892a1b...",
                    "removeLabels": [
                      "STARRED"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Modify result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GmailModifyResponse"
                },
                "examples": {
                  "sample": {
                    "$ref": "#/components/examples/GmailModifyResponse"
                  },
                  "result": {
                    "value": {
                      "id": "19913f5fbd4cb5fc",
                      "threadId": "19913f5fbd4cb5fc",
                      "labelIds": [
                        "INBOX",
                        "STARRED",
                        "UNREAD"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing id / Gmail error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "Gmail"
        ]
      }
    },
    "/gmail/markAsUnread": {
      "post": {
        "summary": "Mark a message as unread",
        "operationId": "gmailMarkAsUnread",
        "description": "Ustawia etykietę UNREAD dla pojedynczej wiadomości.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Gmail message ID (pojedyncza wiadomość)"
                  }
                },
                "required": [
                  "id"
                ]
              },
              "examples": {
                "sample": {
                  "$ref": "#/components/examples/GmailMarkAsUnreadRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Modify result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "threadId": {
                      "type": "string"
                    },
                    "labelIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "id",
                    "threadId",
                    "labelIds"
                  ],
                  "$ref": "#/components/schemas/GmailModifyResponse"
                },
                "examples": {
                  "sample": {
                    "$ref": "#/components/examples/GmailMarkAsUnreadResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing id / Gmail error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "Gmail"
        ],
        "security": [
          {
            "AdminHeader": []
          },
          {
            "BearerAdmin": []
          }
        ]
      }
    },
    "/calendar/list": {
      "get": {
        "summary": "List events within a time range",
        "operationId": "calendarList",
        "security": [
          {
            "AdminHeader": []
          },
          {
            "BearerAdmin": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "calendarId",
            "schema": {
              "type": "string",
              "default": "primary"
            }
          },
          {
            "in": "query",
            "name": "timeMin",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "timeMax",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "maxResults",
            "schema": {
              "type": "integer",
              "default": 250,
              "maximum": 2500
            }
          },
          {
            "in": "query",
            "name": "singleEvents",
            "schema": {
              "type": "string",
              "description": "If 'false', returns series; default true"
            }
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string",
              "description": "Default 'startTime' if singleEvents=true else 'updated'"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Events list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CalendarEvent"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/CalendarListResponse"
                  },
                  "sample": {
                    "value": [
                      {
                        "id": "evt_123",
                        "summary": "SMOKE TEST – spotkanie",
                        "htmlLink": "https://calendar.google.com/event?eid=...",
                        "location": "Online",
                        "description": "Testowe spotkanie",
                        "start": "2025-09-07T15:00:00+02:00",
                        "end": "2025-09-07T15:30:00+02:00",
                        "attendees": [
                          {
                            "email": "jan@example.com"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "List error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "Calendar"
        ]
      }
    },
    "/calendar/create": {
      "post": {
        "summary": "Create a calendar event on primary",
        "operationId": "calendarCreate",
        "security": [
          {
            "AdminHeader": []
          },
          {
            "BearerAdmin": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarCreateRequest"
              },
              "examples": {
                "minimal": {
                  "$ref": "#/components/examples/CalendarCreateRequest"
                },
                "simple": {
                  "value": {
                    "summary": "Team sync",
                    "description": "Krótki opis",
                    "location": "Online",
                    "start": "2025-09-07T16:00:00+02:00",
                    "end": "2025-09-07T16:30:00+02:00",
                    "attendees": [
                      "alice@example.com",
                      "bob@example.com"
                    ],
                    "startISO": "2025-09-12T10:00:00+02:00",
                    "durationMin": 30,
                    "conference": "true"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Event created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarEvent"
                },
                "examples": {
                  "created": {
                    "$ref": "#/components/examples/CalendarCreateResponse"
                  },
                  "created_alt": {
                    "value": {
                      "id": "evt_456",
                      "summary": "SMOKE TEST – spotkanie",
                      "htmlLink": "https://calendar.google.com/event?eid=...",
                      "location": "Online",
                      "description": "Krótki opis",
                      "start": "2025-09-07T16:00:00+02:00",
                      "end": "2025-09-07T16:30:00+02:00",
                      "attendees": [
                        {
                          "email": "jan@example.com"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Calendar error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "Calendar"
        ]
      }
    },
    "/calendar/notifications": {
      "post": {
        "summary": "Google push notifications webhook (echo 200)",
        "operationId": "calendarNotificationsPost",
        "responses": {
          "200": {
            "description": "Acknowledged",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "method": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ok": {
                    "value": {
                      "ok": true,
                      "method": "POST"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error400"
          }
        },
        "tags": [
          "Webhooks"
        ]
      },
      "get": {
        "tags": [
          "Webhooks"
        ],
        "operationId": "calendarNotificationsGet",
        "summary": "Simple GET ping endpoint (always returns 200 'ok')",
        "responses": {
          "200": {
            "description": "OK ping",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error400"
          }
        }
      },
      "put": {
        "tags": [
          "Webhooks"
        ],
        "operationId": "calendarNotificationsPut",
        "summary": "Webhook echo PUT",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error400"
          }
        }
      },
      "delete": {
        "tags": [
          "Webhooks"
        ],
        "operationId": "calendarNotificationsDelete",
        "summary": "Webhook echo DELETE",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error400"
          }
        }
      }
    },
    "/diag/env": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "operationId": "getDiagEnv",
        "summary": "Diagnostics of environment",
        "responses": {
          "200": {
            "description": "Diagnostics snapshot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiagEnv"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error400"
          },
          "500": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/oauth2/start": {
      "get": {
        "tags": [
          "OAuth"
        ],
        "operationId": "oauth2Start",
        "summary": "Redirect to Google OAuth2 consent",
        "responses": {
          "200": {
            "description": "DEV-only JSON with URL (unreachable due to early return in current code)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthUrl"
                }
              }
            }
          },
          "302": {
            "description": "Redirect to Google OAuth consent page",
            "headers": {
              "Location": {
                "description": "Google authorization URL",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error400"
          }
        }
      }
    },
    "/oauth2/callback": {
      "get": {
        "tags": [
          "OAuth"
        ],
        "operationId": "oauth2Callback",
        "summary": "OAuth2 callback from Google",
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OAuth OK message",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Missing code",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "OAuth error",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/auth/export": {
      "get": {
        "tags": [
          "OAuth"
        ],
        "operationId": "exportTokens",
        "summary": "Export current tokens (DEV only or when enabled)",
        "security": [
          {
            "AdminHeader": []
          },
          {
            "BearerAdmin": []
          }
        ],
        "responses": {
          "200": {
            "description": "Tokens export",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportedTokens"
                }
              }
            }
          },
          "400": {
            "description": "No tokens in memory",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/gmail/send": {
      "post": {
        "tags": [
          "Gmail"
        ],
        "operationId": "gmailSend",
        "summary": "Send an email via Gmail",
        "security": [
          {
            "AdminHeader": []
          },
          {
            "BearerAdmin": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GmailSendRequest"
              },
              "examples": {
                "basic": {
                  "value": {
                    "to": "user@example.com",
                    "subject": "Hello",
                    "text": "Hi there!",
                    "html": "<p>Hi there!</p>"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sent message info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GmailSendResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Gmail send failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/gmail/reply": {
      "post": {
        "tags": [
          "Gmail"
        ],
        "operationId": "gmailReply",
        "summary": "Reply to an email (optionally infer headers)",
        "security": [
          {
            "AdminHeader": []
          },
          {
            "BearerAdmin": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GmailReplyRequest"
              },
              "examples": {
                "byReplyToId": {
                  "value": {
                    "replyToMessageId": "1872e5f8f23...",
                    "text": "Thanks!",
                    "threadId": "19913f5fbd4cb5fc",
                    "html": "<p>Thanks!</p>"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sent reply info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GmailSendResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request / missing data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/gmail/markAsRead": {
      "post": {
        "tags": [
          "Gmail"
        ],
        "operationId": "gmailMarkAsRead",
        "summary": "Mark a message as read",
        "security": [
          {
            "AdminHeader": []
          },
          {
            "BearerAdmin": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Modify result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GmailModifyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing id / Gmail error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/gmail/message": {
      "get": {
        "tags": [
          "Gmail"
        ],
        "operationId": "gmailMessage",
        "summary": "Get a full message with parsed body and attachments",
        "security": [
          {
            "AdminHeader": []
          },
          {
            "BearerAdmin": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "raw",
            "schema": {
              "type": "string",
              "enum": [
                "1",
                "true",
                "yes",
                "y",
                "0",
                "false",
                "no",
                "n"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Message details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GmailMessageFull"
                }
              }
            }
          },
          "400": {
            "description": "Missing id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Fetch failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/gmail/attachment": {
      "get": {
        "tags": [
          "Gmail"
        ],
        "operationId": "gmailAttachment",
        "summary": "Download an attachment as JSON (base64) or stream",
        "security": [
          {
            "AdminHeader": []
          },
          {
            "BearerAdmin": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "messageId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "attachmentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string",
              "enum": [
                "1",
                "true",
                "yes",
                "y",
                "0",
                "false",
                "no",
                "n"
              ]
            }
          },
          {
            "in": "query",
            "name": "filename",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mimeType",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "contentType",
            "schema": {
              "type": "string",
              "description": "Alias of mimeType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment bytes (stream) or JSON payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GmailAttachmentDownloadResponse"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Attachment not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "413": {
            "description": "Attachment too large for JSON response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/drive/search": {
      "get": {
        "tags": [
          "Drive"
        ],
        "operationId": "driveSearch",
        "summary": "Search files in Google Drive",
        "security": [
          {
            "AdminHeader": []
          },
          {
            "BearerAdmin": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "schema": {
              "type": "string"
            },
            "description": "Name contains substring"
          },
          {
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          },
          {
            "in": "query",
            "name": "namePrefix",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "pdf",
                "doc",
                "docx",
                "document",
                "sheet",
                "xlsx",
                "spreadsheet",
                "slides",
                "ppt",
                "pptx",
                "folder",
                "image",
                "video",
                "csv",
                "txt",
                "zip"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Files list (descending by modifiedTime)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DriveFile"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error400"
          },
          "500": {
            "description": "Drive search failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/places/search": {
      "get": {
        "tags": [
          "Places"
        ],
        "operationId": "placesSearch",
        "summary": "Search nearby places (Google Places API)",
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "schema": {
              "type": "string"
            },
            "description": "Free-text search. Default \"kawiarnia\"."
          },
          {
            "in": "query",
            "name": "lat",
            "schema": {
              "type": "number",
              "default": 52.2297
            }
          },
          {
            "in": "query",
            "name": "lng",
            "schema": {
              "type": "number",
              "default": 21.0122
            }
          },
          {
            "in": "query",
            "name": "radius",
            "schema": {
              "type": "integer",
              "default": 3000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlacesSearchResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error400"
          },
          "500": {
            "description": "Missing API key or error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/places/details": {
      "get": {
        "tags": [
          "Places"
        ],
        "operationId": "placesDetails",
        "summary": "Get place details by resource name",
        "parameters": [
          {
            "in": "query",
            "name": "place_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Place details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceDetails"
                }
              }
            }
          },
          "400": {
            "description": "Missing place_id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Missing API key or error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/agent/command": {
      "post": {
        "tags": [
          "Agent"
        ],
        "operationId": "agentCommand",
        "summary": "Execute simple natural-language commands",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentCommandRequest"
              },
              "examples": {
                "starEmail": {
                  "value": {
                    "text": "Oznacz wiadomość 1892a1b gwiazdką"
                  }
                },
                "unreadEmail": {
                  "value": {
                    "text": "Oznacz mail 1892a1b jako nieprzeczytany"
                  }
                },
                "drivePrefix": {
                  "value": {
                    "text": "Znajdź Drive z prefiksem raport_"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Action executed / result embedded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentCommandResponse"
                }
              }
            }
          },
          "400": {
            "description": "Unrecognized or invalid command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Execution error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/calendar/quickAdd": {
      "post": {
        "tags": [
          "Calendar"
        ],
        "operationId": "calendarQuickAdd",
        "summary": "Quick add event from natural text",
        "security": [
          {
            "AdminHeader": []
          },
          {
            "BearerAdmin": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string"
                  },
                  "q": {
                    "type": "string"
                  }
                },
                "description": "Provide either 'text' or 'q'."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Quick add created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "summary": {
                      "type": "string"
                    },
                    "htmlLink": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Calendar error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "adminHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "x-admin"
      },
      "AdminHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "x-admin",
        "description": "Admin secret header. If present and valid, authorizes the request.\nAlternatively, you may pass the same secret as Bearer token in `Authorization`.\n"
      },
      "BearerAdmin": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "GmailLabel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "GmailMessageSummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "threadId": {
            "type": "string"
          },
          "snippet": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "from": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "threadId"
        ]
      },
      "CalendarEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "htmlLink": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          },
          "attendees": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email"
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "error": {
            "type": "string"
          },
          "status": {
            "type": "integer"
          },
          "details": {}
        },
        "required": [
          "error",
          "status"
        ]
      },
      "HealthOk": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean"
          },
          "now": {
            "type": "integer",
            "description": "Unix ms timestamp"
          }
        },
        "required": [
          "ok",
          "now"
        ]
      },
      "RootInfo": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "time": {
            "type": "integer"
          },
          "env": {
            "type": "string"
          }
        },
        "required": [
          "ok",
          "name",
          "time"
        ]
      },
      "DiagEnv": {
        "type": "object",
        "properties": {
          "NODE_ENV": {
            "type": "string"
          },
          "BASE_URL": {
            "type": "string"
          },
          "OAUTH_REDIRECT": {
            "type": "string"
          },
          "CANONICAL_HOST": {
            "type": "string"
          },
          "IS_PROD": {
            "type": "boolean"
          },
          "DISABLE_REDIRECTS": {
            "type": "string"
          },
          "HAS_TOKENS_FILE": {
            "type": "boolean"
          },
          "TOKENS_FILE": {
            "type": "string"
          },
          "THREAD_PARSER_V2": {
            "type": "string"
          },
          "FLAG_THREAD_V2": {
            "type": "boolean"
          }
        }
      },
      "OAuthUrl": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "url"
        ]
      },
      "AuthStatus": {
        "type": "object",
        "properties": {
          "authenticated": {
            "type": "boolean"
          },
          "hasAccessToken": {
            "type": "boolean"
          },
          "hasRefreshToken": {
            "type": "boolean"
          },
          "expiry": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer",
                "description": "Unix ms timestamp"
              }
            ]
          }
        },
        "required": [
          "authenticated",
          "hasAccessToken",
          "hasRefreshToken"
        ]
      },
      "ExportedTokens": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "token_type": {
            "type": "string",
            "enum": [
              "Bearer"
            ]
          },
          "expiry_date": {
            "type": "integer"
          },
          "id_token": {
            "type": "string"
          }
        }
      },
      "GmailAttachmentItem": {
        "type": "object",
        "properties": {
          "filename": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "contentBase64": {
            "type": "string",
            "description": "Standard Base64 (not URL-safe). May be empty in legacy thread."
          }
        },
        "required": [
          "filename",
          "contentType",
          "contentBase64"
        ]
      },
      "GmailInlineItem": {
        "$ref": "#/components/schemas/GmailAttachmentItem"
      },
      "GmailMessageMinimal": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "threadId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "threadId"
        ]
      },
      "GmailMessageFull": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "threadId": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "from": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "snippet": {
            "type": "string"
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "body": {
            "type": "object",
            "properties": {
              "html": {
                "type": "string"
              },
              "text": {
                "type": "string"
              }
            },
            "required": [
              "html",
              "text"
            ]
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GmailAttachmentItem"
            }
          },
          "rawMessage": {}
        },
        "required": [
          "id",
          "threadId",
          "body"
        ]
      },
      "GmailSendAttachment": {
        "type": "object",
        "properties": {
          "filename": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "contentBase64": {
            "type": "string",
            "description": "Standard Base64"
          }
        },
        "required": [
          "filename",
          "contentBase64"
        ]
      },
      "GmailSendRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GmailSendRequestBase"
          },
          {
            "anyOf": [
              {
                "required": [
                  "text"
                ],
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string"
                  }
                }
              },
              {
                "required": [
                  "html"
                ],
                "type": "object",
                "properties": {
                  "html": {
                    "type": "string"
                  }
                }
              }
            ]
          }
        ]
      },
      "GmailSendResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "threadId": {
            "type": "string"
          },
          "labelIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "threadId"
        ]
      },
      "GmailReplyRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GmailReplyRequestBase"
          },
          {
            "anyOf": [
              {
                "required": [
                  "replyToMessageId"
                ],
                "type": "object",
                "properties": {
                  "replyToMessageId": {
                    "type": "string"
                  }
                }
              },
              {
                "required": [
                  "threadId"
                ],
                "type": "object",
                "properties": {
                  "threadId": {
                    "type": "string"
                  }
                }
              }
            ],
            "oneOf": [
              {
                "required": [
                  "text"
                ],
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string"
                  }
                }
              },
              {
                "required": [
                  "html"
                ],
                "type": "object",
                "properties": {
                  "html": {
                    "type": "string"
                  }
                }
              }
            ]
          }
        ]
      },
      "GmailModifyRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "addLabels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "removeLabels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "GmailModifyResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "threadId": {
            "type": "string"
          },
          "labelIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "threadId",
          "labelIds"
        ]
      },
      "GmailAttachmentDownloadResponse": {
        "type": "object",
        "properties": {
          "filename": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "contentBase64": {
            "type": "string"
          }
        },
        "required": [
          "filename",
          "contentType",
          "contentBase64"
        ]
      },
      "GmailThreadsList": {
        "type": "object",
        "properties": {
          "threads": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "historyId": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "nextPageToken": {
            "type": "string"
          }
        }
      },
      "DriveFile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "mimeType": {
            "type": "string"
          },
          "modifiedTime": {
            "type": "string",
            "format": "date-time"
          },
          "owners": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "displayName": {
                  "type": "string"
                },
                "emailAddress": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          },
          "webViewLink": {
            "type": "string"
          },
          "size": {
            "type": "string"
          }
        }
      },
      "PlacesSearchResponse": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          },
          "lat": {
            "type": "number"
          },
          "lng": {
            "type": "number"
          },
          "radius": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlaceDetails"
            }
          }
        }
      },
      "PlaceDetails": {
        "type": "object",
        "properties": {
          "place_name": {
            "type": "string",
            "description": "Places API resource name"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "phone": {
            "type": [
              "string",
              "null"
            ]
          },
          "website": {
            "type": [
              "string",
              "null"
            ]
          },
          "rating": {
            "type": [
              "number",
              "null"
            ]
          },
          "user_ratings_total": {
            "type": [
              "integer",
              "null"
            ]
          },
          "open_weekdays": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "location": {
            "type": "object",
            "properties": {
              "lat": {
                "type": [
                  "number",
                  "null"
                ]
              },
              "lng": {
                "type": [
                  "number",
                  "null"
                ]
              }
            }
          },
          "types": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AgentCommandRequest": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          }
        },
        "required": [
          "text"
        ]
      },
      "AgentCommandResponse": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string"
          },
          "request": {},
          "result": {},
          "say": {
            "type": "string"
          }
        }
      },
      "CalendarCreateRequest": {
        "type": "object",
        "properties": {
          "summary": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "description": "Alias for summary"
          },
          "description": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "tz": {
            "type": "string",
            "default": "Europe/Warsaw"
          },
          "timezone": {
            "type": "string"
          },
          "startISO": {
            "type": "string",
            "format": "date-time"
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "endISO": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "durationMin": {
            "type": "integer",
            "default": 30
          },
          "attendees": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email"
                    }
                  },
                  "required": [
                    "email"
                  ]
                }
              ]
            }
          },
          "conference": {
            "type": "string",
            "description": "If 'true', create Google Meet"
          }
        },
        "description": "Creates an event on primary calendar. If `end`/`endISO` absent, uses start+durationMin.\n"
      },
      "GmailMessage": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string"
          },
          "threadId": {
            "type": "string"
          },
          "labelIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "snippet": {
            "type": "string"
          },
          "internalDate": {
            "type": "string"
          }
        }
      },
      "GmailThread": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string"
          },
          "snippet": {
            "type": "string"
          },
          "historyId": {
            "type": "string"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GmailMessage"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "GmailSendRequestBase": {
        "properties": {
          "from": {
            "type": "string",
            "description": "Optional. RFC5322 mailbox."
          },
          "to": {
            "type": "string",
            "description": "Comma-separated recipients."
          },
          "subject": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "html": {
            "type": "string"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GmailSendAttachment"
            }
          }
        },
        "required": [
          "to",
          "subject"
        ],
        "additionalProperties": true,
        "type": "object"
      },
      "GmailReplyRequestBase": {
        "properties": {
          "replyToMessageId": {
            "type": "string",
            "description": "If set, headers like In-Reply-To/References/Subject/To are inferred."
          },
          "threadId": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "html": {
            "type": "string"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GmailSendAttachment"
            }
          },
          "inReplyTo": {
            "type": "string"
          },
          "references": {
            "type": "string"
          }
        },
        "additionalProperties": true,
        "type": "object"
      }
    },
    "examples": {
      "GmailLabelList": {
        "summary": "Example labels response",
        "value": {
          "value": [
            {
              "id": "INBOX",
              "name": "INBOX",
              "type": "system"
            },
            {
              "id": "STARRED",
              "name": "STARRED",
              "type": "system"
            }
          ]
        }
      },
      "GmailMessagesList": {
        "summary": "Example list of messages (summary view)",
        "value": [
          {
            "id": "19913f5fbd4cb5fc",
            "threadId": "19913f5fbd4cb5fc",
            "snippet": "Hello from Alice…"
          },
          {
            "id": "19913ecf868a469e",
            "threadId": "19913ecf868a469e",
            "snippet": "Invoice attached"
          }
        ]
      },
      "GmailThreadExpanded": {
        "summary": "Example expanded thread (expand=1)",
        "value": {
          "id": "19913f5fbd4cb5fc",
          "historyId": "123456",
          "snippet": "Hello from Alice…",
          "messagesCount": 1,
          "messages": [
            {
              "id": "19913f5fbd4cb5fc",
              "threadId": "19913f5fbd4cb5fc",
              "labelIds": [
                "INBOX"
              ],
              "snippet": "Hello from Alice…",
              "headers": {
                "from": "Alice <alice@example.com>",
                "to": "You <you@gmail.com>",
                "cc": "",
                "bcc": "",
                "subject": "Sample message",
                "date": "Fri, 06 Sep 2025 10:00:00 +0200",
                "messageId": "<abc@id>",
                "inReplyTo": ""
              },
              "body": {
                "text": "Hi!",
                "html": "<p>Hi!</p>"
              },
              "attachments": [
                {
                  "filename": "invoice.pdf",
                  "contentType": "application/pdf",
                  "contentBase64": "JVBERi0x..."
                }
              ],
              "inline": [],
              "hasAttachments": true,
              "attachmentsCount": 1,
              "hasInline": false,
              "inlineCount": 0
            }
          ]
        }
      },
      "CalendarCreateRequest": {
        "summary": "Minimal event request",
        "value": {
          "summary": "SMOKE TEST",
          "start": "2025-09-08T10:00:00Z",
          "end": "2025-09-08T10:30:00Z",
          "description": "Created by API",
          "location": "Google Meet"
        }
      },
      "CalendarCreateResponse": {
        "summary": "Minimal event response",
        "value": {
          "id": "evt_123",
          "htmlLink": "https://calendar.google.com/event?eid=...",
          "start": "2025-09-07T16:00:00+02:00",
          "end": "2025-09-07T16:30:00+02:00"
        }
      },
      "CalendarListResponse": {
        "summary": "Events for next 24h",
        "value": [
          {
            "id": "evt_123",
            "start": "2025-09-08T10:00:00Z",
            "end": "2025-09-08T10:30:00Z",
            "summary": "Daily standup",
            "location": "Meet"
          },
          {
            "id": "evt_124",
            "start": "2025-09-08T13:00:00Z",
            "end": "2025-09-08T13:30:00Z",
            "summary": "Check-in",
            "location": "Office"
          }
        ]
      },
      "GmailModifyRequest": {
        "summary": "Modify message (add/remove labels)",
        "value": {
          "id": "19913f5fbd4cb5fc",
          "addLabels": [
            "STARRED",
            "UNREAD"
          ],
          "removeLabels": []
        }
      },
      "GmailModifyResponse": {
        "summary": "Modify result",
        "value": {
          "id": "19913f5fbd4cb5fc",
          "threadId": "19913f5fbd4cb5fc",
          "labelIds": [
            "STARRED",
            "UNREAD"
          ]
        }
      },
      "GmailMarkAsUnreadRequest": {
        "summary": "Mark single message as UNREAD",
        "value": {
          "id": "19913f5fbd4cb5fc"
        }
      },
      "GmailMarkAsUnreadResponse": {
        "summary": "After markAsUnread",
        "value": {
          "id": "19913f5fbd4cb5fc",
          "threadId": "19913f5fbd4cb5fc",
          "labelIds": [
            "UNREAD"
          ]
        }
      },
      "GmailThreadRawResponse": {
        "summary": "Thread with raw payloads (raw=1)",
        "value": {
          "id": "19913f5fbd4cb5fc",
          "historyId": "123456",
          "snippet": "Hello from Alice…",
          "messagesCount": 1,
          "messages": [
            {
              "id": "19913f5fbd4cb5fc",
              "threadId": "19913f5fbd4cb5fc",
              "labelIds": [
                "INBOX"
              ],
              "snippet": "",
              "internalDate": "1757090000000",
              "headers": {
                "from": "Alice <alice@example.com>",
                "to": "You <you@gmail.com>",
                "cc": "",
                "bcc": "",
                "subject": "Sample message (raw)",
                "date": "Fri, 06 Sep 2025 10:00:00 +0200",
                "messageId": "<abc@id>",
                "inReplyTo": ""
              },
              "raw": "SGVsbG8="
            }
          ]
        }
      }
    },
    "responses": {
      "Error400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
}
openapi: 3.0.3
info:
  title: Jarvis-PL API (Public for GPT Actions)
  version: "1.3.0"
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://ai.aneuroasystent.pl
    description: Production


security: []

paths:
  /:
    get:
      operationId: root
      summary: Prosty test żywotności (tekst "OK")
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema: { type: string }
        "4XX":
          description: Błąd zapytania
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
        "5XX":
          description: Błąd serwera
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }

  /health:
    get:
      operationId: health
      summary: Health check
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok: { type: boolean }
        "4XX":
          description: Błąd zapytania
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
        "5XX":
          description: Błąd serwera
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }

  /oauth2/start:
    get:
      operationId: oauth2Start
      summary: Rozpocznij autoryzację OAuth2 (Google)
      description: Zwraca przekierowanie do ekranu zgody Google (w praktyce 302). Dla lintera zwracamy 200.
      responses:
        "200":
          description: OK (opis informacyjny dla lintera; w praktyce endpoint robi 302)
          content:
            text/plain:
              schema: { type: string }
        "4XX":
          description: Błąd danych / uprawnień
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
        "5XX":
          description: Błąd serwera
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }

  /calendar/create:
    post:
      operationId: createCalendarEvent
      summary: Tworzy wydarzenie w kalendarzu (primary) — opcjonalnie z Google Meet
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: "#/components/schemas/CreateEventRequest" }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: { $ref: "#/components/schemas/CreateEventResponse" }
        "4XX":
          description: Błąd danych / uprawnień
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
        "5XX":
          description: Błąd serwera / Calendar
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }

  /drive/search:
    get:
      operationId: searchDriveFiles
      summary: Szukaj plików w Google Drive
      description: Obsługuje paginację, sortowanie i filtrowanie po prefiksie nazwy oraz MIME.
      parameters:
        - in: query
          name: q
          schema: { type: string }
          description: Własne zapytanie Drive (np. trashed = false).
        - in: query
          name: type
          schema: { type: string }
          description: Np. pdf, docx, xlsx lub pełny MIME (mime:application/pdf).
        - in: query
          name: namePrefix
          schema: { type: string }
          description: Filtruj pliki, których nazwa zaczyna się od tej frazy (case-insensitive).
        - in: query
          name: sort
          schema:
            type: string
            enum: [name, modified]
            default: modified
          description: Sortuj po nazwie lub dacie modyfikacji.
        - in: query
          name: sortDir
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: Kierunek sortowania.
        - in: query
          name: pageSize
          schema: { type: integer, minimum: 1, maximum: 100 }
          description: Liczba elementów na stronę (domyślnie 10).
        - in: query
          name: pageToken
          schema: { type: string }
          description: Token kolejnej strony z poprzedniej odpowiedzi.
        - in: query
          name: raw
          schema: { type: boolean }
          description: Gdy true/1 – zwróci surową odpowiedź Google (klucz `files` + `nextPageToken`).
        - in: query
          name: export
          schema:
            type: string
            enum: [csv]
          description: Jeśli `csv`, zwróci CSV zamiast JSON.
        - in: query
          name: allPages
          schema: { type: boolean }
          description: Gdy true/1 – pobierze wszystkie strony aż do `maxTotal`.
        - in: query
          name: maxTotal
          schema: { type: integer }
          description: Limit łącznej liczby plików przy allPages=1 (CSV).
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriveSearchResponse"
            text/csv:
              schema:
                type: string
                description: CSV z kolumnami id,name,mimeType,modifiedTime,ownerName,ownerEmail,webViewLink,size
        "4XX":
          description: Błąd zapytania / uprawnień
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
        "5XX":
          description: Błąd serwera
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }

  /gmail/messages:
    get:
      operationId: listGmailMessages
      summary: Pobierz listę wiadomości Gmail (ostatnie/filtr)
      parameters:
        - in: query
          name: q
          schema: { type: string }
          description: Zapytanie Gmail, np. newer_than:7d subject:"faktura" has:attachment
        - in: query
          name: pageSize
          schema: { type: integer, minimum: 1, maximum: 100 }
          description: Domyślnie 10
        - in: query
          name: pageToken
          schema: { type: string }
          description: Token do kolejnej strony
        - in: query
          name: expand
          schema: { type: boolean }
          description: Gdy true/1 – zwróci więcej pól (subject, from, date) w liście
        - in: query
          name: raw
          schema: { type: boolean }
          description: Gdy true/1 – dołączy surową odpowiedź Google
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      $ref: "#/components/schemas/GmailMessageListItem"
        "4XX":
          description: Błąd zapytania / uprawnień
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
        "5XX":
          description: Błąd serwera / Gmail
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }

  /gmail/message:
    get:
      operationId: getGmailMessage
      summary: Szczegóły pojedynczej wiadomości (body + załączniki)
      parameters:
        - in: query
          name: id
          required: true
          schema: { type: string }
          description: ID wiadomości Gmail
        - in: query
          name: raw
          schema: { type: boolean }
          description: Gdy true/1 – dołączy surową odpowiedź Google
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GmailMessageDetails"
        "4XX":
          description: Błąd zapytania / uprawnień
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
        "5XX":
          description: Błąd serwera / Gmail
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }

  /gmail/attachment:
    get:
      operationId: getGmailAttachment
      summary: Pobierz binarną zawartość załącznika
      parameters:
        - in: query
          name: messageId
          required: true
          schema: { type: string }
          description: ID wiadomości (messageId)
        - in: query
          name: attachmentId
          required: true
          schema: { type: string }
          description: ID załącznika (attachmentId z /gmail/message)
        - in: query
          name: filename
          schema: { type: string }
          description: Sugerowana nazwa pliku (Content-Disposition filename)
        - in: query
          name: disposition
          schema:
            type: string
            enum: [attachment, inline]
            default: attachment
          description: attachment (pobieranie) lub inline (podgląd)
        - in: query
          name: contentType
          schema: { type: string }
          description: Domyślnie application/octet-stream
      responses:
        "200":
          description: OK (binarny strumień)
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "4XX":
          description: Błąd zapytania / uprawnień
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
        "5XX":
          description: Błąd serwera / Gmail
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }

  /gmail/send:
    post:
      operationId: sendGmail
      summary: Wysyła wiadomość (HTML/plain + załączniki)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendMailRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendMailResponse"
        "4XX":
          description: Błąd danych / uprawnień
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
        "5XX":
          description: Błąd serwera / Gmail
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }

  /gmail/reply:
    post:
      operationId: gmailReply
      summary: Odpowiada w wątku (thread) — ustawia In-Reply-To/References
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReplyMailRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplyMailResponse"
        "4XX":
          description: Błąd danych / uprawnień
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
        "5XX":
          description: Błąd serwera / Gmail
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
  /gmail/labels:
  get:
    operationId: listGmailLabels
    summary: Lista etykiet Gmail
    responses:
      "200":
        description: OK
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: array
                  items: { $ref: "#/components/schemas/GmailLabel" }
                Count: { type: integer }
      "4XX":
        description: Błąd wejścia lub brak autoryzacji
        content:
          application/json:
            schema: { $ref: "#/components/schemas/ErrorResponse" }

/gmail/modify:
  post:
    operationId: modifyGmailMessage
    summary: Dodaj/usuń etykiety na wiadomości
    requestBody:
      required: true
      content:
        application/json:
          schema: { $ref: "#/components/schemas/ModifyMailRequest" }
    responses:
      "200":
        description: Zmodyfikowano etykiety
        content:
          application/json:
            schema: { $ref: "#/components/schemas/ModifyMailResponse" }
      "4XX":
        description: Błąd wejścia lub autoryzacji
        content:
          application/json:
            schema: { $ref: "#/components/schemas/ErrorResponse" }

/gmail/markAsRead:
  post:
    operationId: markAsRead
    summary: Oznacz wiadomość jako PRZECZYTANĄ (usuwa UNREAD)
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              id: { type: string }
            required: [id]
    responses:
      "200":
        description: OK
        content:
          application/json:
            schema: { $ref: "#/components/schemas/ModifyMailResponse" }
      "4XX":
        description: Błąd wejścia lub autoryzacji
        content:
          application/json:
            schema: { $ref: "#/components/schemas/ErrorResponse" }

/gmail/markAsUnread:
  post:
    operationId: markAsUnread
    summary: Oznacz wiadomość jako NIEPRZECZYTANĄ (dodaje UNREAD)
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              id: { type: string }
            required: [id]
    responses:
      "200":
        description: OK
        content:
          application/json:
            schema: { $ref: "#/components/schemas/ModifyMailResponse" }
      "4XX":
        description: Błąd wejścia lub autoryzacji
        content:
          application/json:
            schema: { $ref: "#/components/schemas/ErrorResponse" }


components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: "Krótki kod/typ błędu (np. drive_search_failed)"
        status:
          type: integer
          description: "HTTP status związany z błędem"
        details:
          type: object
          description: "Dodatkowe szczegóły błędu"
          additionalProperties: true



    CreateEventRequest:
      type: object
      properties:
        summary:     { type: string }
        description: { type: string }
        location:    { type: string }
        startISO:    { type: string, description: "ISO 8601 lub YYYY-MM-DD (całodniowe)" }
        endISO:      { type: string, description: "ISO 8601 lub YYYY-MM-DD (całodniowe)" }
        timeZone:    { type: string, default: "Europe/Warsaw" }
        attendeesEmails:
          type: array
          items: { type: string }
        createMeet:  { type: boolean, description: "Jeśli true, doda Google Meet" }
        sendUpdates:
          type: string
          enum: [all, none]
          default: none

    CreateEventResponse:
      type: object
      properties:
        id:          { type: string }
        htmlLink:    { type: string }
        hangoutLink: { type: string }
        conferenceData:
          type: object
          additionalProperties: true

    DriveFile:
      type: object
      properties:
        id:           { type: string }
        name:         { type: string }
        mimeType:     { type: string }
        modifiedTime: { type: string }
        webViewLink:  { type: string }
        iconLink:     { type: string }
        size:         { type: string }
        owners:
          type: array
          items:
            type: object
            properties:
              displayName:  { type: string }
              emailAddress: { type: string }

    DriveSearchResponse:
      type: object
      properties:
        files:
          type: array
          items: { $ref: "#/components/schemas/DriveFile" }
        nextPageToken: { type: string }
        pageSize:      { type: integer }
        q:             { type: string }
        orderBy:       { type: string }
        namePrefix:    { type: string }
        sort:          { type: string, description: "name | modified" }
        sortDir:       { type: string, description: "asc | desc" }
        scans:         { type: integer, description: "Ilość stron pobranych z Drive (przy allPages)" }

    GmailMessageListItem:
      type: object
      properties:
        id:      { type: string }
        snippet: { type: string }
        subject: { type: string }
        from:    { type: string }
        date:    { type: string, description: "ISO 8601" }

    GmailMessageDetails:
      type: object
      properties:
        id:       { type: string }
        threadId: { type: string }
        subject:  { type: string }
        from:     { type: string }
        to:       { type: string }
        date:     { type: string, description: "ISO 8601" }
        snippet:  { type: string }
        headers:
          type: object
          additionalProperties: { type: string }
        body:
          type: object
          properties:
            html: { type: string }
            text: { type: string }
        attachments:
          type: array
          items: { $ref: "#/components/schemas/GmailAttachmentMeta" }

    GmailAttachmentMeta:
      type: object
      properties:
        filename:     { type: string }
        mimeType:     { type: string }
        size:         { type: integer }
        attachmentId: { type: string }
        partId:       { type: string }

    GmailAttachment:
      type: object
      properties:
        filename:      { type: string }
        contentType:   { type: string, description: "Domyślnie application/octet-stream" }
        contentBase64: { type: string, description: "Zawartość pliku w base64 (NIE base64url)" }

    SendMailRequest:
      type: object
      properties:
        to:      { type: string, description: "Adres odbiorcy (lub lista rozdzielona przecinkami)" }
        subject: { type: string }
        text:    { type: string }
        html:    { type: string }
        from:    { type: string, description: "Nadawca (opcjonalnie)" }
        attachments:
          type: array
          items: { $ref: "#/components/schemas/GmailAttachment" }
      required: [to, subject]

    SendMailResponse:
      type: object
      properties:
        id:       { type: string }
        threadId: { type: string }
        labelIds:
          type: array
          items: { type: string }

    ReplyMailRequest:
      type: object
      description: Podaj replyToMessageId LUB threadId (wymagane jest jedno z nich).
      properties:
        replyToMessageId:
          type: string
          description: ID wiadomości, do której odpowiadamy (backend sam pobierze nagłówki do In-Reply-To/References)
        threadId:
          type: string
          description: Alternatywnie — odpowiedź w danym wątku (bez replyToMessageId)
        to:
          type: string
          description: Jeśli brak – backend użyje Reply-To/From z oryginału
        subject:
          type: string
          description: 'Domyślnie "Re: {Subject oryginału}"'
        text:
          type: string
          description: Treść jako plaintext (opcjonalnie)
        html:
          type: string
          description: Treść jako HTML (opcjonalnie)
        inReplyTo:
          type: string
          description: Wartość nagłówka In-Reply-To (Message-ID oryginału); zwykle nie trzeba podawać
        references:
          type: string
          description: Wartość nagłówka References; zwykle nie trzeba podawać
        attachments:
          type: array
          items:
            $ref: "#/components/schemas/GmailAttachment"
      oneOf:
        - type: object
          properties:
            replyToMessageId: { type: string }
          required: [replyToMessageId]
        - type: object
          properties:
            threadId: { type: string }
          required: [threadId]
      example:
        replyToMessageId: "179af3c7b2e5c0ab"
        to: "example@domain.com"
        subject: "Re: Zapytanie ofertowe"
        text: "Dziękuję za wiadomość — odpisuję w wątku."

    ReplyMailResponse:
      type: object
      properties:
        id:       { type: string }
        threadId: { type: string }
        labelIds:
          type: array
          items: { type: string }
    GmailLabel:
      type: object
      properties:
        id:   { type: string }
        name: { type: string }
        type: { type: string }
        messageListVisibility: { type: string }
        labelListVisibility: { type: string }

    ModifyMailRequest:
      type: object
      properties:
        id:
          type: string
          description: "ID wiadomości Gmail"
        addLabels:
          type: array
          description: "Nazwy LUB ID etykiet do dodania (np. UNREAD, STARRED, 'Moja etykieta')"
          items:
            type: string
        removeLabels:
          type: array
          description: "Nazwy LUB ID etykiet do usunięcia"
          items:
            type: string
      required: [id]

    ModifyMailResponse:
      type: object
      properties:
        id:       { type: string }
        threadId: { type: string }
        labelIds:
          type: array
          items: { type: string }

openapi: 3.0.3
info:
  title: Jarvis-PL API (Public)
  version: "1.3.0"
  description: |
    Publiczny opis API dla Twojego asystenta. Zawiera minimalny, praktyczny zestaw endpointów:
    - `/` oraz `/health` do podstawowych testów,
    - `/drive/search` z paginacją, CSV, filtrem `namePrefix` (seed `name contains '<prefix>'` + prefix-aware paging),
    - `/gmail/messages` z paginacją, `raw=1` oraz lekkim trybem metadanych `expand=1`.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: https://ai.aneuroasystent.pl
    description: Produkcyjny serwer
  - url: http://localhost:8080
    description: Lokalny serwer deweloperski
security: []

paths:
  /:
    get:
      operationId: root
      summary: Prosty test żywotności (tekst "OK")
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema: { type: string }
        "4XX":
          description: Błąd
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
  /health:
    get:
      operationId: health
      summary: Health check
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok: { type: boolean }
        "4XX":
          description: Błąd
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }

  /drive/search:
    get:
      operationId: driveSearch
      summary: Szukaj plików w Google Drive
      description: >
        Obsługuje paginację (`pageToken`, `raw=1`), eksport CSV (`export=csv`, `allPages=1`, `maxTotal`).
        Dla parametru `namePrefix` backend stosuje dwustopniowe zawężenie:
        (1) seed po stronie Google Drive: dodaje warunek `name contains '<prefix>'` do zapytania,
        (2) ścisły prefiks (case-insensitive) po stronie serwera oraz prefix-aware paging — kolejne strony
        są skanowane do czasu zebrania `pageSize` trafień (limit bezpieczeństwa).
      parameters:
        - in: query
          name: q
          schema: { type: string }
          description: Zapytanie (np. `fulltext`, nazwa pliku itp.)
        - in: query
          name: fulltext
          schema: { type: string }
          description: Szukanie w treści (Google Drive fullText).
        - in: query
          name: type
          schema: { type: string }
          description: Skrót typu (np. pdf, docx, folder, image, video, xlsx...) albo `mime:...`.
        - in: query
          name: pageSize
          schema: { type: integer, minimum: 1, maximum: 100, default: 20 }
          description: Liczba wyników na stronę.
        - in: query
          name: pageToken
          schema: { type: string }
          description: Token kolejnej strony wyników.
        - in: query
          name: export
          schema: { type: string, enum: [csv, json] }
          description: Gdy `csv` — zwraca CSV (nagłówek `Content-Disposition`).
        - in: query
          name: allPages
          schema: { type: boolean, default: false }
          description: Dla `export=csv` — pobiera wszystkie strony (do limitu `maxTotal`).
        - in: query
          name: maxTotal
          schema: { type: integer, default: 2000, minimum: 1, maximum: 10000 }
          description: Limit łącznej liczby rekordów (CSV).
        - in: query
          name: raw
          schema: { type: boolean, default: false }
          description: Gdy `true` — zwraca obiekt `{ files, nextPageToken, ... }`.
        - in: query
          name: namePrefix
          schema: { type: string }
          description: "Prefiks nazwy (case-insensitive). Backend seeduje zapytanie Drive (`name contains '<prefix>'`) i filtruje lokalnie prefiks oraz skanuje kolejne strony (prefix-aware paging), aż zbierze `pageSize` trafień."
        - in: query
          name: sort
          schema: { type: string, enum: [modified, name], default: modified }
          description: Sortowanie po `modified` lub `name`.
        - in: query
          name: sortDir
          schema: { type: string, enum: [asc, desc] }
          description: Kierunek sortowania (domyślnie `desc` dla `modified`, `asc` dla `name`).
        - in: query
          name: includeShared
          schema: { type: boolean, default: true }
          description: "Czy uwzględniać pliki współdzielone i z Dysków współdzielonych. Gdy false — zwraca tylko pliki, których jesteś właścicielem (`'me' in owners`)."
        - in: query
          name: ext
          schema: { type: string }
          description: "Lista rozszerzeń, rozdzielona przecinkami (np. `pdf,docx,zip`). Seed: `name contains '.ext'`, a następnie lokalne `endsWith('.ext')` (case-insensitive)."
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items: { type: object }
                  - type: object
                    properties:
                      files:
                        type: array
                        items: { type: object }
                      nextPageToken: { type: string }
                      pageSize: { type: integer }
                      q: { type: string }
                      orderBy: { type: string }
                      namePrefix: { type: string }
                      sort: { type: string }
                      sortDir: { type: string }
                      includeShared: { type: boolean }
                      ext:
                        type: array
                        items: { type: string }
                      scans: { type: integer }
        "4XX":
          description: Błąd zapytania
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
        "5XX":
          description: Błąd serwera / Google Drive
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }

  /gmail/messages:
    get:
      operationId: listGmailMessages
      summary: Lista wiadomości Gmail z paginacją
      description: >
        Zwraca listę wiadomości. Parametr `q` przyjmuje pełną składnię wyszukiwania Gmail
        (np. `newer_than:7d subject:"faktura" from:@allegro.pl has:attachment`).  
        Ustaw `expand=1`, aby otrzymać lekkie metadane (Subject/From/To/Date + snippet) bez pełnych treści.  
        Ustaw `raw=1`, aby otrzymać obiekt `{ messages, nextPageToken, pageSize, q }` zamiast samej tablicy.
      parameters:
        - in: query
          name: q
          schema: { type: string }
          description: Składnia wyszukiwania Gmail (np. newer_than:7d subject:"faktura" from:... has:attachment).
        - in: query
          name: pageSize
          schema: { type: integer, minimum: 1, maximum: 100, default: 25 }
          description: Liczba wyników na stronę (1–100).
        - in: query
          name: pageToken
          schema: { type: string }
          description: Token kolejnej strony wyników (z poprzedniego wywołania).
        - in: query
          name: expand
          schema: { type: boolean, default: false }
          description: Gdy true — dołącza lekkie metadane wiadomości (Subject/From/To/Date + snippet).
        - in: query
          name: raw
          schema: { type: boolean, default: false }
          description: Gdy true — zwraca obiekt z messages i nextPageToken. Domyślnie zwraca samą tablicę.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items:
                      oneOf:
                        - $ref: "#/components/schemas/GmailMessageMinimal"
                        - $ref: "#/components/schemas/GmailMessageExpanded"
                  - type: object
                    properties:
                      messages:
                        type: array
                        items:
                          oneOf:
                            - $ref: "#/components/schemas/GmailMessageMinimal"
                            - $ref: "#/components/schemas/GmailMessageExpanded"
                      nextPageToken: { type: string }
                      pageSize: { type: integer }
                      q: { type: string }
        "4XX":
          description: Błąd zapytania
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
        "5XX":
          description: Błąd serwera / Gmail
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }

components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Krótki kod/typ błędu
        status:
          type: integer
          description: HTTP status
        details:
          type: object
          description: Dodatkowe szczegóły błędu
          additionalProperties: true

    GmailMessageMinimal:
      type: object
      properties:
        id: { type: string, description: ID wiadomości }
        threadId: { type: string, description: ID wątku }

    GmailMessageExpanded:
      type: object
      properties:
        id: { type: string }
        threadId: { type: string }
        subject: { type: string }
        from: { type: string }
        to: { type: string }
        date: { type: string, description: Data w formacie ISO 8601 (o ile da się sparsować nagłówek Date) }
        snippet: { type: string, description: Krótki fragment treści zwracany przez Gmail API }

openapi: 3.1.0
info:
  title: Jarvis-PL API
  version: "1.0.0"
  description: |
    Publiczna specyfikacja API do akcji Jarvis-PL (Gmail/Drive/Calendar).
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://ai.aneuroasystent.pl
    description: Production
  #- url: http://localhost:8080
   # description: Lokalny serwer deweloperski

security:
  - {}

paths:
  /health:
    get:
      operationId: health
      summary: Status serwera
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                required: [ok]
        "4XX":
          description: Błąd zapytania
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Błąd serwera
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /gmail/messages:
    get:
      operationId: gmailMessagesList
      summary: Lista wiadomości (opcjonalnie filtrowana zapytaniem Gmail)
      parameters:
        - in: query
          name: pageSize
          schema: { type: integer, minimum: 1, maximum: 100 }
        - in: query
          name: expand
          description: 1 = więcej pól w liście
          schema: { type: integer, enum: [0,1], default: 0 }
        - in: query
          name: raw
          description: Zwracaj pola surowe/techniczne
          schema: { type: integer, enum: [0,1], default: 0 }
        - in: query
          name: q
          description: Zapytanie jak w Gmailu (np. newer_than:7d, is:unread, from:...)
          schema: { type: string }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      $ref: "#/components/schemas/GmailMessageMeta"
                required: [messages]
        "4XX":
          description: Błąd zapytania
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
        "5XX":
          description: Błąd serwera / Gmail
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }

  /gmail/message:
    get:
      operationId: gmailMessageGet
      summary: Szczegóły pojedynczej wiadomości (treść, nagłówki, załączniki)
      parameters:
        - in: query
          name: id
          required: true
          schema: { type: string }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GmailMessageDetails"
        "4XX":
          description: Brak lub błędne parametry
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
        "5XX":
          description: Błąd serwera / Gmail
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }

  /gmail/thread:
    get:
      operationId: gmailThreadGet
      summary: Dane wątku (messages) lub RAW (zależnie od parametrów)
      parameters:
        - in: query
          name: threadId
          required: true
          schema: { type: string }
        - in: query
          name: expand
          schema: { type: integer, enum: [0,1], default: 0 }
        - in: query
          name: raw
          schema: { type: integer, enum: [0,1], default: 0 }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GmailThreadResponseRaw"
                  - $ref: "#/components/schemas/GmailThreadResponse"
        "4XX":
          description: Brak lub błędne parametry
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
        "5XX":
          description: Błąd serwera / Gmail
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }

  /gmail/attachment:
    get:
      operationId: gmailAttachmentGet
      summary: Pobranie załącznika (JSON lub streaming binarny)
      parameters:
        - in: query
          name: messageId
          required: true
          schema: { type: string }
        - in: query
          name: attachmentId
          required: true
          schema: { type: string }
        - in: query
          name: stream
          description: 1 = odpowiedź binarna (octet-stream)
          schema: { type: integer, enum: [0,1], default: 0 }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  filename: { type: string }
                  contentType: { type: string }
                  contentBase64: { type: string, description: "base64 (nie base64url)" }
                required: [filename, contentType, contentBase64]
            application/octet-stream:
              schema:
                type: string
                format: binary
        "4XX":
          description: Brak lub błędne parametry / Nie znaleziono
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
        "5XX":
          description: Błąd serwera / Gmail
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }

  /gmail/labels:
    get:
      operationId: gmailLabelsList
      summary: Lista etykiet Gmail
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: array
                    items:
                      type: object
                      properties:
                        id: { type: string }
                        name: { type: string }
        "4XX":
          description: Błąd zapytania
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
        "5XX":
          description: Błąd serwera
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }

  /gmail/modify:
    post:
      operationId: gmailModify
      summary: Dodaj/usuń etykiety (np. STARRED)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id: { type: string }
                addLabels:
                  type: array
                  items: { type: string }
                removeLabels:
                  type: array
                  items: { type: string }
              required: [id]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok: { type: boolean }
        "4XX":
          description: Błąd walidacji
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
        "5XX":
          description: Błąd serwera
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }

  /gmail/markAsRead:
    post:
      operationId: gmailMarkAsRead
      summary: Oznacz jako przeczytane
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id: { type: string }
              required: [id]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok: { type: boolean }
        "4XX":
          description: Błąd walidacji
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
        "5XX":
          description: Błąd serwera
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }

  /gmail/markAsUnread:
    post:
      operationId: gmailMarkAsUnread
      summary: Oznacz jako nieprzeczytane
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id: { type: string }
              required: [id]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok: { type: boolean }
        "4XX":
          description: Błąd walidacji
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
        "5XX":
          description: Błąd serwera
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }

  /gmail/send:
    post:
      operationId: gmailSend
      summary: Wyślij e-mail (z opcjonalnymi załącznikami)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                to: { type: string }
                cc: { type: string }
                bcc: { type: string }
                subject: { type: string }
                text: { type: string }
                html: { type: string }
                attachments:
                  type: array
                  items:
                    $ref: "#/components/schemas/GmailAttachment"
              required: [to, subject]
      responses:
        "200":
          description: Wysłane / zaakceptowane
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: { type: string }
                  threadId: { type: string }
                  ok: { type: boolean }
        "4XX":
          description: Błąd walidacji lub autoryzacji
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
        "5XX":
          description: Błąd serwera / Gmail
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }

  /drive/search:
    get:
      operationId: driveSearch
      summary: Wyszukiwanie plików na Drive
      parameters:
        - in: query
          name: pageSize
          schema: { type: integer, minimum: 1, maximum: 100 }
        - in: query
          name: q
          schema: { type: string }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  files:
                    type: array
                    items:
                      $ref: "#/components/schemas/DriveFile"
                required: [files]
        "4XX":
          description: Błąd zapytania
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
        "5XX":
          description: Błąd serwera
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }

  /calendar/create:
    post:
      operationId: calendarCreate
      summary: Utwórz wydarzenie w Kalendarzu
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                summary: { type: string }
                description: { type: string }
                location: { type: string }
                startISO: { type: string, description: "YYYY-MM-DDTHH:mm:ss" }
                endISO:   { type: string, description: "YYYY-MM-DDTHH:mm:ss" }
                timeZone: { type: string, default: "Europe/Warsaw" }
                createMeet: { type: boolean, default: true }
                remindersOverride:
                  type: array
                  items:
                    type: object
                    properties:
                      method: { type: string }
                      minutes: { type: integer }
              required: [summary, startISO]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: { type: string }
                  htmlLink: { type: string }
        "4XX":
          description: Błąd walidacji
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
        "5XX":
          description: Błąd serwera
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }

components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Krótki kod błędu (np. gmail_thread_failed)
        status:
          type: integer
          description: HTTP status (np. 400/401/500)
        details:
          description: Dodatkowe informacje (tekst/obiekt/tablica)
          oneOf:
            - type: string
            - type: object
            - type: array
              items: {}
      required: [error, status]

    GmailAttachmentMeta:
      type: object
      properties:
        filename:     { type: string }
        mimeType:     { type: string }
        size:         { type: integer }
        attachmentId: { type: [string, "null"] }
        partId:       { type: [string, "null"] }
        isInline:     { type: [boolean, "null"] }
        contentId:    { type: [string, "null"] }
        disposition:  { type: [string, "null"] }

    GmailAttachment:
      type: object
      properties:
        filename:      { type: string }
        contentType:   { type: string, description: "Domyślnie application/octet-stream" }
        contentBase64: { type: string, description: "Zawartość pliku w base64 (NIE base64url)" }
      required: [filename, contentBase64]

    GmailMessageMeta:
      type: object
      required: [id, threadId]
      properties:
        id:       { type: string }
        threadId: { type: string }
        subject:  { type: string }
        from:     { type: string }
        to:       { type: string }
        date:     { type: string, description: "ISO 8601" }
        snippet:  { type: string }

    GmailMessageDetails:
      type: object
      properties:
        id:       { type: string }
        threadId: { type: string }
        subject:  { type: string }
        from:     { type: string }
        to:       { type: string }
        date:     { type: string, description: "ISO 8601" }
        snippet:  { type: string }
        headers:
          type: object
          additionalProperties: { type: string }
        body:
          type: object
          properties:
            html: { type: string }
            text: { type: string }
        attachments:
          type: array
          items: { $ref: "#/components/schemas/GmailAttachmentMeta" }

    GmailThreadResponse:
      type: object
      properties:
        id:      { type: string, description: "ID wątku" }
        messages:
          type: array
          items: { $ref: "#/components/schemas/GmailMessageDetails" }
        count:  { type: integer, description: "Liczba wiadomości w wątku" }

    GmailThreadResponseRaw:
      type: object
      properties:
        id:    { type: string }
        count: { type: integer }
        messages:
          type: array
          items: { $ref: "#/components/schemas/GmailMessageDetails" }

    DriveFile:
      type: object
      properties:
        id:          { type: string }
        name:        { type: string }
        mimeType:    { type: string }
        webViewLink: { type: string }
        iconLink:    { type: string }
        modifiedTime: { type: string }
        size:         { type: string }

